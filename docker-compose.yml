services:
  # ----------------------------------------
  # 1. SERVICIO DE APLICACIÓN (PHP-FPM)
  # ----------------------------------------
  app:
    # Usa el Dockerfile corregido en la carpeta ./docker
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: gps_tracker_app
    restart: unless-stopped
    # Expone el puerto 9000 internamente para Nginx
    expose:
      - 9000
    volumes:
      # Monta el código fuente
      - .:/var/www/html
      # Volúmenes persistentes para datos generados por la aplicación
      - app_storage_data:/var/www/html/storage
      - app_cache_data:/var/www/html/bootstrap/cache
    depends_on:
      - db
      - redis
    networks:
      - app-network

  # ----------------------------------------
  # 2. SERVIDOR WEB (NGINX)
  # ----------------------------------------
  web:
    image: nginx:stable-alpine
    container_name: gps_tracker_web
    restart: unless-stopped
    # Mapea el puerto 80 del host
    ports:
      - "80:80"
    volumes:
      # Monta el código (solo lectura por seguridad)
      - .:/var/www/html:ro
      # Monta el archivo de configuración de Nginx (debe estar en ./docker/nginx.conf)
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app-network

  # ----------------------------------------
  # 3. BASE DE DATOS (MARIADB)
  # ----------------------------------------
  db:
    image: mariadb:10.11
    container_name: gps_tracker_db
    restart: unless-stopped
    # Mapea el puerto 3306 para acceso externo opcional
    ports:
      - "3306:3306"
    environment:
      # Variables de entorno para la base de datos (se recomienda usar un archivo .env)
      MYSQL_DATABASE: ${DB_DATABASE:-gps_tracker}
      MYSQL_USER: ${DB_USERNAME:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MARIADB_CHARSET: utf8mb4
      MARIADB_COLLATION: utf8mb4_unicode_ci
    volumes:
      # Volumen persistente para los datos de la base de datos
      - db_data:/var/lib/mysql
    networks:
      - app-network

  # ----------------------------------------
  # 4. CACHÉ Y COLA (REDIS)
  # ----------------------------------------
  redis:
    image: redis:alpine
    container_name: gps_tracker_redis
    restart: unless-stopped
    expose:
      - 6379
    networks:
      - app-network

# ----------------------------------------
# DEFINICIÓN DE VOLÚMENES PERSISTENTES
# ----------------------------------------
volumes:
  app_storage_data:
  app_cache_data:
  db_data:

# ----------------------------------------
# REDES
# ----------------------------------------
networks:
  app-network:
    driver: bridge